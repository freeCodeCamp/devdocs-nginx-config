server {
  listen 443 ssl http2;
  listen [::]:443 ssl http2;
  server_name documents.devdocs.in;
  # SSL
  include snippets/common/ssl-devdocs-in.conf;
  access_log /var/log/nginx/access.log combined if=$log_4xx_5xx;
  # TODO: try enabling this once everything else is working.
  # security
  # include snippets/common/security.conf;
  location / {
    return 401;
  }

  location ~* \.(html|json)$ {
    add_header Access-Control-Allow-Origin *;
    add_header Access-Control-Allow-Methods "GET,OPTIONS";
    add_header Access-Control-Max-Age 86400;
    add_header Access-Control-Allow-Credentials true;
    add_header Vary Accept-Encoding,Origin,Access-Control-Request-Headers,Access-Control-Request-Method;
    proxy_hide_header x-amz-id-2;
    proxy_hide_header x-amz-request-id;
    # x-amz-version-id and x-amz-delete-marker are not removed by MaxCDN, but I
    # think the goal is to remove everything Amazon specific, so I'm removing
    # it.
    proxy_hide_header x-amz-version-id;
    # the s3fox headers may no longer be used, but let's err on the side of
    # removing them for now
    proxy_hide_header x-amz-meta-s3fox-filesize;
    proxy_hide_header x-amz-meta-s3fox-modifiedtime;
    # NOTE: this proxy pass MUST NOT have a trailing slash.  If it does, it can
    # be interpreted as a URI and is handled differently.
    proxy_pass http://devdocs-staging-documents;
  }
}

server {
  listen 443 ssl http2;
  listen [::]:443 ssl http2;
  server_name downloads.devdocs.in;
  access_log /var/log/nginx/access.log combined if=$log_4xx_5xx;
  # SSL
  include snippets/common/ssl-devdocs-in.conf;
  
  # TODO: try enabling this once everything else is working.
  # security
  # include snippets/common/security.conf;
  location / {
    # TODO: this might not need its own bucket and can just use the bucket at
    # http://devdocs-staging-documents;
    proxy_pass http://devdocs-test;
  }
}